apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

buildscript {
    ext {
        VersionKotlin = "1.3.30"
        VersionRxBinding = "1.0.1"
        VersionRetrofit = "2.5.0"
    }
}

android {
    compileSdkVersion 28


    defaultConfig {
        minSdkVersion 17
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

        consumerProguardFiles "proguard-rules.pro"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

repositories {
    maven { url "https://jitpack.io" }
    maven { url "https://maven.google.com" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$VersionKotlin"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.2.0"

    implementation "com.squareup.moshi:moshi:1.8.0"
    implementation "com.squareup.retrofit2:retrofit:$VersionRetrofit"
    implementation "com.squareup.okhttp3:okhttp:3.12.2"

    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.8.0'
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all { task ->
    sourceCompatibility = JavaVersion.VERSION_1_6
    targetCompatibility = JavaVersion.VERSION_1_6

    kotlinOptions {
        freeCompilerArgs += [
                "-Xuse-experimental=kotlin.contracts.ExperimentalContracts",
                "-XXLanguage:+InlineClasses",
        ]

        if (task.name == "compileReleaseKotlin") {
            freeCompilerArgs += [
                    "-Xno-call-assertions",
                    "-Xno-param-assertions",
                    "-Xno-receiver-assertions",
            ]
        }
    }
}
