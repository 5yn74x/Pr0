apply plugin: 'com.android.application'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'
apply plugin: 'me.tatarka.retrolambda'

apply from: 'version.gradle'

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
    }

    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.13.0'
        classpath 'io.fabric.tools:gradle:1.21.7'
        classpath 'me.tatarka:gradle-retrolambda:3.3.0-beta4'
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    }
}

android {
    compileSdkVersion 24
    buildToolsVersion "24.0.0"

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 24

        versionCode appVersion
        versionName "1.${(int) (appVersion / 10)}.${(int) (appVersion % 10)}"

        resConfigs "en", "de"

        // vectorDrawables.useSupportLibrary = true

        ndk {
            abiFilters "x86", "x86_64", "armeabi", "armeabi-v7a", "arm64-v8a"
        }

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    aaptOptions {
        // See https://www.reddit.com/r/androiddev/comments/47ni7v/if_you_support_older_versions_of_android_there_is/
        additionalParameters "--no-version-vectors"
        cruncherEnabled = false
    }

    sourceSets.main {
        jni.srcDirs = []
        jniLibs.srcDir 'src/main/libs'
    }

    signingConfigs {
        open {
            storeFile file("../release.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            versionNameSuffix ".dev"
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules-release.pro'
        }
    }

    productFlavors {
        open {
            applicationId "com.pr0gramm.app"
            signingConfig signingConfigs.open
        }
    }

    lintOptions {
        checkReleaseBuilds false
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/maven/com.google.dagger/dagger/pom.xml'
        exclude 'META-INF/maven/com.google.dagger/dagger/pom.properties'
    }
}

android.applicationVariants.all { variant ->
    variant.mergeResources.doLast {
        def filesToDelete = fileTree(variant.mergeResources.outputDir) {
            // remove timezone data
            include "raw/joda_*"
            exclude "raw/joda_etc_utc"
            exclude "raw/joda_europe_berlin"
            exclude "raw/joda_europe_zurich"
            exclude "raw/joda_zoneinfomap"

            // remove left-to-right drawables
            include "drawable-ldrtl-*/*"
        }

        filesToDelete.each { it.delete() }
    }

    // delete .so-files we dont want in the finished build
    tasks."merge${variant.name.capitalize()}JniLibFolders".doLast {
        def filesToDelete = fileTree("build/") {
            include "**/libpl_droidsonroids_gif_surface.so"
            include "**/armeabi/libpl_droidsonroids_gif.so"
            include "**/mips*/*.so"
        }

        filesToDelete.each { it.delete() }
    }
}

retrolambda {
    incremental true
}

repositories {
    maven { url "https://jitpack.io" }
    maven { url "https://maven.fabric.io/public" }
    maven { url "http://bright.github.io/maven-repo/" }
    maven { url 'http://dl.bintray.com/amulyakhare/maven' }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])

    compile 'javax.annotation:jsr250-api:1.0'
    compile 'com.google.code.findbugs:jsr305:3.0.1'
    compile 'com.android.support:appcompat-v7:24.1.1'
    compile 'com.android.support:recyclerview-v7:24.1.1'
    compile 'com.android.support:design:24.1.1'
    compile 'com.android.support:customtabs:24.1.1'
    compile 'com.google.android.gms:play-services-analytics:9.2.1'
    compile 'com.google.guava:guava:19.0'

    compile 'net.danlew:android.joda:2.9.4.1'
    compile 'com.squareup.retrofit2:retrofit:2.1.0'
    compile 'com.squareup.retrofit2:converter-gson:2.1.0'
    compile 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
    compile 'com.squareup.okhttp3:okhttp:3.4.1'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.jakewharton.picasso:picasso2-okhttp3-downloader:1.0.2'
    compile 'pl.droidsonroids.gif:android-gif-drawable:1.1.16'
    compile 'com.github.tony19:named-regexp:0.2.4'
    compile 'com.pnikosis:materialish-progress:1.7'
    compile 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
    compile 'com.squareup.sqlbrite:sqlbrite:0.7.0'
    compile "com.infstory:proguard-annotations:1.0.2"
    compile 'net.sf.trove4j:trove4j:3.0.3'
    compile 'com.davemorrissey.labs:subsampling-scale-image-view:3.5.0'
    compile 'org.nanohttpd:nanohttpd:2.3.0'
    compile 'com.github.akodiakson:sdkcheck:0.2.4'
    compile 'com.github.KeepSafe:ReLinker:1.2.1'
    compile 'it.sephiroth.android.exif:android-exif-extended:1.0.6'
    compile 'com.indeed:java-dogstatsd-client:2.0.16'
    compile 'me.leolin:ShortcutBadger:1.1.6@aar'

    compile 'com.google.android.exoplayer:exoplayer:r1.5.9'
    compile 'commons-io:commons-io:2.5'

    // forked dependencies.
    compile 'com.github.mopsalarm:FinestWebView-Android:2cf36fd5298052490c5bc4535ba6a666c4208202'

    debugCompile 'com.facebook.stetho:stetho:1.3.1'
    debugCompile 'com.facebook.stetho:stetho-okhttp3:1.3.1'
    releaseProvided 'com.facebook.stetho:stetho:1.3.1'
    releaseProvided 'com.facebook.stetho:stetho-okhttp3:1.3.1'

    compile 'com.jakewharton:butterknife:8.2.1'
    compile 'com.jakewharton:butterknife-annotations:8.2.1'
    apt 'com.jakewharton:butterknife-compiler:8.2.1'

    compile "com.f2prateek.dart:dart:2.0.0"
    apt 'com.f2prateek.dart:dart-processor:2.0.0'

    // rx java
    compile 'io.reactivex:rxjava:1.1.8'
    compile 'io.reactivex:rxandroid:1.2.1'
    compile 'io.reactivex:rxjava-async-util:0.21.0'
    compile 'com.artemzin.rxjava:proguard-rules:1.1.8.0'
    compile 'com.trello:rxlifecycle:0.6.1'
    compile 'com.trello:rxlifecycle-components:0.6.1'

    // bottomsheets
    compile 'com.flipboard:bottomsheet-core:1.5.1'

    compile 'pl.brightinventions:slf4android:0.1.2'
    compile 'com.crashlytics.sdk.android:crashlytics:2.6.1'

    apt 'org.immutables:value:2.2.10'
    provided 'org.immutables:value:2.2.10'
    provided 'org.immutables:gson:2.2.10'

    compile 'com.google.dagger:dagger:2.6'
    apt 'com.google.dagger:dagger-compiler:2.6'

    // use a newer version of retrolambda
    retrolambdaConfig 'net.orfjackal.retrolambda:retrolambda:2.3.0'

    androidTestCompile 'com.android.support.test.espresso:espresso-core:2.2.2'
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.google.code.findbugs:jsr305:3.0.1'
    androidTestCompile 'com.android.support:support-annotations:24.1.1'
}
