apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.crashlytics'

apply from: 'version.gradle'

buildscript {
    repositories {
        mavenCentral()
        google()
    }

    dependencies {
        classpath 'com.google.gms:google-services:4.3.3'
        classpath 'com.google.firebase:firebase-crashlytics-gradle:2.0.0-beta03'
    }
}

android {
    compileSdkVersion 29

    // ndkVersion "21.0.6011959-rc2"

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 29
        applicationId "com.pr0gramm.app"

        versionCode appVersion

        versionName "1.${(int) (appVersion / 10)}.${(int) (appVersion % 10)}"

        resConfigs "en", "de"

        vectorDrawables.useSupportLibrary = true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            abiFilters "armeabi-v7a", "arm64-v8a", "x86"
        }
    }

    signingConfigs {
        release {
            storeFile file("../release.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6

        // this is required for exoplayer to work
        targetCompatibility JavaVersion.VERSION_1_8
    }

    buildTypes {
        debug {
            minifyEnabled false
            shrinkResources false
            crunchPngs false

            proguardFiles 'proguard-rules-base.pro', 'proguard-rules-debug.pro'

            multiDexEnabled true

            versionNameSuffix ".dev"
            applicationIdSuffix ".dev"
        }

        release {
            minifyEnabled true
            crunchPngs false

            // setting this to true prevents the in-app update dialog to work.
            shrinkResources false

            proguardFiles 'proguard-rules-base.pro', 'proguard-rules-release.pro'

            multiDexEnabled false

            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        checkReleaseBuilds false
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/rxjava.properties'

        exclude 'META-INF/*.kotlin_module'
        exclude '**/*.kotlin_builtins'
        exclude '**/*.kotlin_metadata'
    }
}

android.applicationVariants.all { variant ->
    // delete .so-files we don't want in the finished build
    tasks."merge${variant.name.capitalize()}JniLibFolders".doLast {
        def filesToDelete = fileTree("build/") {
            include "**/armeabi/libpl_droidsonroids_gif.so"
            include "**/mips*/*.so"
        }

        filesToDelete.each { it.delete() }
    }

    tasks."package${variant.name.capitalize()}".doLast {
        println("Checking for important files in the apk...")

        def output = new ByteArrayOutputStream()
        exec {
            commandLine("unzip", "-t", "$buildDir/outputs/apk/${variant.name}/app-${variant.name}.apk")
            standardOutput output
        }

        if (!output.toString("UTF-8").contains("okhttp3/internal/publicsuffix/publicsuffixes.gz")) {
            throw new RuntimeException("publicsuffixes.gz not found in build")
        }

        if (variant.name.toLowerCase() == "release") {
            if (output.toString("UTF-8").contains("classes2.dex")) {
                throw new RuntimeException("classes2.dex should not exist.")
            }
        }
    }
}

repositories {
    maven { url "https://jitpack.io" }
    maven { url "https://maven.google.com" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])

    implementation project(":model")

    implementation "org.jetbrains.kotlin:kotlin-stdlib:1.3.71"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:1.3.5"

    implementation 'com.google.android.material:material:1.1.0'
    implementation 'androidx.recyclerview:recyclerview:1.1.0'
    implementation 'androidx.browser:browser:1.2.0'
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.exifinterface:exifinterface:1.1.0'
    implementation 'androidx.preference:preference:1.1.0'
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.0.0'
    implementation 'androidx.drawerlayout:drawerlayout:1.0.0'
    implementation 'androidx.documentfile:documentfile:1.0.1'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.2.0'

    implementation 'androidx.activity:activity-ktx:1.1.0'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.2.0'

    // 1.2.0 failes with a precomputed text issue when selecting
    // and dragging text in the comments
    implementation 'androidx.core:core-ktx:1.1.0'

    // 1.2.2 does not restore the fragment state correctly when going back.
    // e.g. scroll position in favorites is gone
    implementation 'androidx.fragment:fragment-ktx:1.1.0'

    implementation "com.google.android.gms:play-services-ads-lite:19.0.1"
    implementation 'com.google.firebase:firebase-analytics:17.2.3'
    implementation 'com.google.firebase:firebase-crashlytics:17.0.0-beta02'

    implementation "com.squareup.retrofit2:retrofit:2.8.1"
    implementation("com.squareup.retrofit2:converter-moshi:2.8.1")

    implementation(platform("com.squareup.okhttp3:okhttp-bom:4.4.1"))
    implementation "com.squareup.okhttp3:okhttp"
    implementation "com.squareup.okhttp3:okhttp-dnsoverhttps"
    implementation "com.squareup.okhttp3:okhttp-brotli"
    implementation "com.squareup.picasso:picasso:2.71828"

    implementation "com.squareup.moshi:moshi:1.9.2"

    // still issues with version > 1.2.12
    implementation "pl.droidsonroids.gif:android-gif-drawable:1.2.12"

    implementation "com.github.tony19:named-regexp:0.2.5"
    implementation "com.pnikosis:materialish-progress:1.7"
    implementation "com.squareup.sqlbrite:sqlbrite:1.1.2"
    implementation "com.infstory:proguard-annotations:1.0.2"
    implementation "com.github.mopsalarm:subsampling-scale-image-view:v3.10.0-1"
    implementation "com.indeed:java-dogstatsd-client:2.0.16"
    implementation "me.leolin:ShortcutBadger:1.1.22@aar"
    implementation 'com.github.AlexKorRnd:ChipsLayoutManager:v0.3.8.4'

    implementation "androidx.work:work-runtime-ktx:2.3.4"

    implementation 'com.github.paolorotolo:appintro:5.1.0'

    implementation 'com.google.android.exoplayer:exoplayer-core:2.11.3'

    debugImplementation "com.github.ChuckerTeam.Chucker:library:3.1.2"
    releaseImplementation "com.github.ChuckerTeam.Chucker:library-no-op:3.1.2"

    debugImplementation 'androidx.multidex:multidex:2.0.1'

    // rx java
    implementation "io.reactivex:rxjava:1.3.8"
    implementation "io.reactivex:rxandroid:1.2.1"
    implementation "com.artemzin.rxjava:proguard-rules:1.3.3.0"
    implementation "com.trello:rxlifecycle:1.0"
    implementation "com.trello:rxlifecycle-android:1.0"
    implementation "com.trello:rxlifecycle-components:1.0"

    androidTestImplementation "androidx.test.ext:junit:1.1.1"
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-contrib:3.2.0'
    androidTestImplementation 'androidx.test.espresso:espresso-idling-resource:3.2.0'
    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'

    androidTestImplementation 'com.jakewharton.espresso:okhttp3-idling-resource:1.0.0'
}

configurations {
    implementation {
        exclude group: "org.jetbrains.kotlin", module: "kotlin-stdlib-jdk7"
    }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all { task ->
    sourceCompatibility = JavaVersion.VERSION_1_6
    targetCompatibility = JavaVersion.VERSION_1_8

    kotlinOptions {
        jvmTarget = "1.8"

        freeCompilerArgs += [
                "-Xuse-experimental=kotlin.contracts.ExperimentalContracts",
                "-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi",
                "-Xuse-experimental=kotlinx.coroutines.FlowPreview",
                "-XXLanguage:+InlineClasses",
        ]

        if (task.name == "compileReleaseKotlin") {
            freeCompilerArgs += [
                    "-Xno-call-assertions",
                    "-Xno-param-assertions",
                    "-Xno-receiver-assertions",
            ]
        }
    }
}
