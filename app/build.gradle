apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.github.ben-manes.versions'
apply plugin: 'io.fabric'

apply from: 'version.gradle'

buildscript {
    ext {
        VersionKotlin = "1.2.41"
        VersionSupportLibrary = "27.1.1"
        VersionRxBinding = "1.0.1"
        VersionRetrofit = "2.4.0"
    }

    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://maven.fabric.io/public' }
        maven { url "https://maven.google.com" }
    }

    dependencies {
        classpath 'com.github.ben-manes:gradle-versions-plugin:0.17.0'
        classpath 'io.fabric.tools:gradle:1.25.4'
        classpath 'com.google.gms:google-services:4.0.1'
        classpath 'com.google.firebase:firebase-plugins:1.1.5'
        classpath 'com.getkeepsafe.dexcount:dexcount-gradle-plugin:0.8.2'
    }
}

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.3'

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 27
        applicationId "com.pr0gramm.app"

        versionCode appVersion
        versionName "1.${(int) (appVersion / 10)}.${(int) (appVersion % 10)}"

        resConfigs "en", "de"

        vectorDrawables.useSupportLibrary = true

        ndk {
            abiFilters "x86", "x86_64", "armeabi", "armeabi-v7a", "arm64-v8a"
        }

        testInstrumentationRunner 'android.support.test.runner.AndroidJUnitRunner'
    }

    aaptOptions {
        cruncherEnabled = true
    }

    sourceSets.main {
        java.srcDirs += 'src/main/kotlin'
    }

    signingConfigs {
        release {
            storeFile file("../release.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_6
        targetCompatibility JavaVersion.VERSION_1_6
    }

    buildTypes {
        debug {
            minifyEnabled true
            shrinkResources true
            proguardFiles 'proguard-rules-base.pro', 'proguard-rules-debug.pro'

            versionNameSuffix ".dev"
            applicationIdSuffix ".dev"
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles 'proguard-rules-base.pro', 'proguard-rules-release.pro'

            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        checkReleaseBuilds false
    }

    packagingOptions {
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/maven/com.google.guava/guava/pom.xml'
        exclude 'META-INF/maven/com.google.guava/guava/pom.properties'
        exclude 'META-INF/rxjava.properties'
        exclude 'META-INF/app_debug.kotlin_module'
    }
}

android.applicationVariants.all { variant ->
    variant.mergeResources.doLast {
        def filesToDelete = fileTree(variant.mergeResources.outputDir) {
            // remove timezone data
            include "raw_joda_*"

            exclude "raw_joda_etc_utc*"
            exclude "raw_joda_europe_berlin*"
            exclude "raw_joda_europe_zurich*"
            exclude "raw_joda_europe_vienna*"
            exclude "raw_joda_zoneinfomap*"

            // remove left-to-right drawables
            include "drawable-ldrtl-*_*"
        }

        filesToDelete.each { it.delete() }
    }

    // delete .so-files we dont want in the finished build
    tasks."merge${variant.name.capitalize()}JniLibFolders".doLast {
        def filesToDelete = fileTree("build/") {
            include "**/armeabi/libpl_droidsonroids_gif.so"
            include "**/mips*/*.so"
        }

        filesToDelete.each { it.delete() }
    }

    tasks."assemble${variant.name.capitalize()}".doLast {
        println("Checking for important files in the apk...")

        def output = new ByteArrayOutputStream()
        exec {
            commandLine("unzip", "-t", "$buildDir/outputs/apk/${variant.name}/app-${variant.name}.apk")
            standardOutput output
        }

        if (!output.toString("UTF-8").contains("okhttp3/internal/publicsuffix/publicsuffixes.gz")) {
            throw new RuntimeException("publicsuffixes.gz not found in build")
        }
    }
}

repositories {
    maven { url "https://jitpack.io" }
    maven { url "https://maven.google.com" }
    maven { url "https://maven.fabric.io/public" }
    maven { url "http://dl.bintray.com/amulyakhare/maven" }
    maven { url "http://dl.bintray.com/skoumal/maven" }
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation project(":api")

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$VersionKotlin"
    implementation "com.google.code.findbugs:jsr305:3.0.2"

    implementation "com.android.support:support-fragment:$VersionSupportLibrary"
    implementation "com.android.support:recyclerview-v7:$VersionSupportLibrary"
    implementation "com.android.support:design:$VersionSupportLibrary"
    implementation "com.android.support:customtabs:$VersionSupportLibrary"
    implementation "com.android.support:palette-v7:$VersionSupportLibrary"
    implementation "com.android.support:support-annotations:$VersionSupportLibrary"
    implementation "com.android.support:cardview-v7:$VersionSupportLibrary"
    implementation "com.android.support:mediarouter-v7:$VersionSupportLibrary"
    implementation "com.android.support:exifinterface:$VersionSupportLibrary"

    implementation("com.android.support:appcompat-v7:$VersionSupportLibrary") {
        exclude(module: "support-media-compat")
        exclude(module: "support-core-utils")
    }

    implementation("com.google.guava:guava:25.1-android") {
        force = true
    }

    implementation "com.google.firebase:firebase-core:16.0.0"
    implementation "com.google.firebase:firebase-ads:15.0.1"
    implementation "com.google.firebase:firebase-analytics:16.0.0"
    implementation "com.google.firebase:firebase-perf:16.0.0"

    // implementation "com.google.android.gms:play-services-analytics:15.0.2"
    // implementation "com.google.android.gms:play-services-ads:15.0.1"
    implementation "com.google.android.gms:play-services-cast-framework:15.0.1"

    implementation "net.danlew:android.joda:2.9.9.4"
    implementation "com.squareup.retrofit2:retrofit:$VersionRetrofit"
    implementation "com.squareup.retrofit2:converter-gson:$VersionRetrofit"
    implementation "com.squareup.retrofit2:converter-moshi:$VersionRetrofit"
    implementation "com.squareup.retrofit2:adapter-rxjava:$VersionRetrofit"
    implementation "com.squareup.okhttp3:okhttp:3.10.0"
    implementation "com.squareup.picasso:picasso:2.71828"
    implementation "com.squareup.moshi:moshi:1.6.0"
    implementation "pl.droidsonroids.gif:android-gif-drawable:1.2.12"
    implementation "com.github.tony19:named-regexp:0.2.5"
    implementation "com.pnikosis:materialish-progress:1.7"
    implementation "com.amulyakhare:com.amulyakhare.textdrawable:1.0.1"
    implementation "com.squareup.sqlbrite:sqlbrite:1.1.2"
    implementation "com.infstory:proguard-annotations:1.0.2"
    implementation 'net.sf.trove4j:trove4j:3.0.3'
    implementation "com.davemorrissey.labs:subsampling-scale-image-view:3.10.0"
    implementation "org.nanohttpd:nanohttpd:2.3.1"
    implementation "com.indeed:java-dogstatsd-client:2.0.16"
    implementation "me.leolin:ShortcutBadger:1.1.21@aar"
    implementation "it.sephiroth.android.exif:android-exif-extended:1.0.6"
    implementation "dnsjava:dnsjava:2.1.8"

    kapt 'com.squareup.moshi:moshi-kotlin-codegen:1.6.0'


    implementation 'com.github.evernote:android-job:v1.2.5'

    implementation "com.github.apl-devs:appintro:v4.2.3"

    implementation 'com.google.android.exoplayer:exoplayer-core:2.8.1'

    debugImplementation "com.facebook.stetho:stetho:1.5.0"
    debugImplementation "com.facebook.stetho:stetho-okhttp3:1.5.0"

    // rx java
    implementation "io.reactivex:rxjava:1.3.8"
    implementation "io.reactivex:rxandroid:1.2.1"
    implementation "io.reactivex:rxjava-async-util:0.21.0"
    implementation 'io.reactivex:rxkotlin:1.0.0'
    implementation "com.artemzin.rxjava:proguard-rules:1.3.3.0"
    implementation "com.trello:rxlifecycle:1.0"
    implementation "com.trello:rxlifecycle-android:1.0"
    implementation "com.trello:rxlifecycle-components:1.0"
    implementation "com.trello:rxlifecycle-kotlin:1.0"

    implementation "com.jakewharton.rxbinding:rxbinding-kotlin:$VersionRxBinding"
    implementation "com.jakewharton.rxbinding:rxbinding-support-v4-kotlin:$VersionRxBinding"
    implementation "com.jakewharton.rxbinding:rxbinding-appcompat-v7-kotlin:$VersionRxBinding"
    implementation "com.jakewharton.rxbinding:rxbinding-design-kotlin:$VersionRxBinding"
    implementation "com.jakewharton.rxbinding:rxbinding-recyclerview-v7-kotlin:$VersionRxBinding"

    implementation "com.github.bright:slf4android:0.1.5"
    implementation "com.crashlytics.sdk.android:crashlytics:2.9.3"

    // dependency injection using kotlin.
    implementation 'com.github.salomonbrys.kodein:kodein:4.1.0'
    implementation 'com.github.salomonbrys.kodein:kodein-android:4.1.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'com.natpryce:hamkrest:1.4.2.2'
    testImplementation "org.jetbrains.kotlin:kotlin-stdlib:$VersionKotlin"
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:$VersionKotlin"
    testImplementation "org.jetbrains.kotlin:kotlin-reflect:$VersionKotlin"
    testImplementation "com.nhaarman:mockito-kotlin:1.5.0"
}

apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.getkeepsafe.dexcount'